provider "aws" {
  region = var.region
}

resource "aws_subnet" "Private-Subnet" {
    count = length(var.Private-cidr)
    vpc_id = aws_vpc.test.id
    cidr_block = element(var.Private-cidr, count.index)
    availability_zone = element(data.aws_availability_zones.available.names, count.index)
    tags = {
      Name = "${var.Private-subnets}-${count.index + 1}"
      env = var.envs[0]
    }
}


resource "aws_route_table" "Private-route" {
  vpc_id = aws_vpc.test.id

  route {
    cidr_block = "0.0.0.0/0"
    gateway_id = aws_nat_gateway.nat-gw.id
  }


  tags = {
    Name = var.Privateroute-table
  }
}

resource "aws_eip" "eip" {
  vpc      = true
}

resource "aws_nat_gateway" "nat-gw" {
  allocation_id = aws_eip.eip.id
  subnet_id     = aws_subnet.Subents.*.id[0]

  tags = {
    Name = "gw NAT"
  }
}


  resource "aws_route_table_association" "private-association" {
    count = length(var.Private-cidr)
  subnet_id      = element(aws_subnet.Private-Subnet.*.id, count.index)
  route_table_id = aws_route_table.Private-route.id
}
